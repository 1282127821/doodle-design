/*
 * Copyright (c) 2022-present Doodle. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto3";

package doodle.design.giftpack;

import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option java_multiple_files = true;
option java_package = "org.doodle.design.giftpack";
option java_outer_classname = "GiftPackStructProto";

enum GiftPackErrorCode {
  FAILURE = 0;
}

message VisionInfo {
  string vision_id = 1;
  string description = 2;
}

message VisionInfoList {
  repeated VisionInfo vision = 1;
}

message GiftInfo {
  string gift_id = 1;
  string content = 2;
  VisionInfo vision = 3;
}

message GiftInfoList {
  repeated GiftInfo gift = 1;
}

message CodeInfo {
  int64 code_id = 1;
  string pack_code = 2;
  GiftInfoList gift = 3;
}

message CodeInfoList {
  repeated CodeInfo code = 1;
}

message PackLifecycleInfo {
  google.protobuf.Timestamp start = 1;
  google.protobuf.Timestamp end = 2;
}

message PackOptionsInfo {
  bool enable = 1;
}

message UniversalPackDetailInfo {
  google.protobuf.Int64Value quantity = 1;
  google.protobuf.Int64Value times = 2;
}

message TemporaryPackDetailInfo {
  int64 quantity = 1;
  int64 batch = 2;
}

message PackDetailInfo {
  oneof Kind {
    UniversalPackDetailInfo universal = 1;
    TemporaryPackDetailInfo temporary = 2;
  }
}

message PackConditionInfo {
  enum MatchType {
    ANY = 0;
    ALL = 1;
  }
  MatchType match_type = 1;
  map<string, string> condition = 2;
}

message PackInfo {
  string pack_id = 1;
  CodeInfo code = 2;
  PackLifecycleInfo lifecycle = 3;
  PackOptionsInfo options = 4;
  PackConditionInfo condition = 5;
  PackDetailInfo detail = 6;
}

message PackInfoList {
  repeated PackInfo pack = 1;
}




